source | extend Labels=parse_json(labels), JsonPayload=parse_json(jsonPayload), Resource=parse_json(resource) 
| extend InsertId=insertId, LogName=logName, ReceiveTimestamp=receiveTimestamp, TimeGenerated=timestamp, GCPResourceType=tostring(Resource['type']), ProjectId=tostring(Resource['labels']['project_id']), Region=tostring(Resource['labels']['region']), RouterId=tostring(Resource['labels']['router_id']), GatewayName=tostring(Resource['labels']['gateway_name']), AllocationStatus=tostring(JsonPayload['allocation_status']), SrcIp=tostring(JsonPayload['connection']['src_ip']), SrcPort=tostring(JsonPayload['connection']['src_port']), DestIp=tostring(JsonPayload['connection']['dest_ip']), DestPort=tostring(JsonPayload['connection']['dest_port']), NatIp=tostring(JsonPayload['connection']['nat_ip']), NatPort=tostring(JsonPayload['connection']['nat_port']), Protocol=tostring(JsonPayload['connection']['protocol']), VmName=tostring(JsonPayload['endpoint']['vm_name']), EndpointRegion=tostring(JsonPayload['endpoint']['region']), EndpointZone=tostring(JsonPayload['endpoint']['zone']), DestinationGeo=parse_json(JsonPayload['destination']['geo_location']), ASN=tostring(JsonPayload['destination']['geo_location']['ASN']), Country=tostring(JsonPayload['destination']['geo_location']['country']), City=tostring(JsonPayload['destination']['geo_location']['city']), DestinationRegion=tostring(JsonPayload['destination']['geo_location']['region']), Continent=tostring(JsonPayload['destination']['geo_location']['continent']) | where LogName endswith 'nat_flows' 
| project InsertId, LogName, ReceiveTimestamp, TimeGenerated, GCPResourceType, ProjectId, Region, RouterId, GatewayName,
 AllocationStatus, SrcIp, SrcPort, DestIp, DestPort, NatIp, NatPort, Protocol, VmName, EndpointRegion, EndpointZone, ASN, Country, City, DestinationRegion, Continent