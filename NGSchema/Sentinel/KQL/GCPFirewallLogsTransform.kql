source
| extend jsonPayload = todynamic(jsonPayload)
| extend resourceLabel = todynamic(resource).labels
| extend connection = jsonPayload.connection
| extend instance = jsonPayload.instance
| extend remoteLocation = jsonPayload.remote_location
| extend ruleDetails = jsonPayload.rule_details
| extend vpc = jsonPayload.vpc
| project 
TimeGenerated = todatetime(receiveTimestamp),
VpcSubnetworkName = tostring(vpc.subnetwork_name),
VpcName = tostring(vpc.vpc_name),
VpcProjectId = tostring(vpc.project_id),
Action = tostring(ruleDetails.action),
Direction = tostring(ruleDetails.direction),
IpPortInfo = todynamic(ruleDetails.ip_port_info),
Priority = tostring(ruleDetails.priority),
Referance = tostring(ruleDetails.reference),
SourceRange = todynamic(ruleDetails.source_range),
RemoteLocationCity = tostring(remoteLocation.city),
RemoteLocationContinent = tostring(remoteLocation.continent),
RemoteLocationCountry = tostring(remoteLocation.country),
RemoteLocationRegion = tostring(remoteLocation.region),
InstanceProjectId = tostring(instance.project_id),
InstanceRegion = tostring(instance.region),
InstanceVmName = tostring(instance.vm_name),
InstanceZone = tostring(instance.zone),
Disposition = tostring(jsonPayload.disposition),
DestIp = tostring(connection.dest_ip),
DestPort = tostring(connection.dest_port),
Protocol = tostring(connection.protocol),
SrcIp = tostring(connection.src_ip),
SrcPort = tostring(connection.src_port),
LogName = logName,
Timestamp = todatetime(timestamp),
InsertId = tostring(insertId),
ProjectId = tostring(resourceLabel.project_id),
ResourceLocation  = tostring(resourceLabel.location),
SubnetworkId = tostring(resourceLabel.subnetwork_id),
ResourceSubnetworkName = tostring(resourceLabel.subnetwork_name),
GCPResourceType = tostring(todynamic(resource).type)