source 
| extend properties = parse_json(properties)
| extend resourceIdArray = split(resourceId, "/")
| extend numElementsInResourceId = array_length(resourceIdArray)
| extend accountNameExtracted = resourceIdArray[numElementsInResourceId - 1]
| project
	TimeGenerated = todatetime(['time']),   
	AccountName = tostring(accountNameExtracted),
	OperationName = operationName,
	ActivityId = tostring(properties.activityId),
	HttpStatusCode = toint(properties.httpstatusCode),
	Result = tostring(properties.result),
	RegionName = tostring(properties.region),
	HttpMethod = tostring(properties.httpMethod),
	CurrentWriteRegion = tostring(properties.currentWriteRegion),
	NewWriteRegion = tostring(properties.newWriteRegion),
	IpRangeFilter = tostring(properties.ipRangeFilter),
	EnableVirtualNetworkFilter = tobool(properties.enableAutomaticFailover),
	VirtualNetworkResourceEntries = tostring(properties.virtualNetworkName),
	EnablePrivateEndpointConnection = tobool(properties.enableAutomaticFailover),
	PrivateEndpointConnections = tostring(properties.privateEndpointArmUrl),
	PrivateEndpointArmUrl = tostring(properties.privateEndpointArmUrl),
	DefaultConsistencyLevel = tostring(properties.defaultConsistencyLevel),
	EnableAutomaticFailover = tobool(properties.enableAutomaticFailover),
	MaxStalenessIntervalInSeconds = todouble(properties.maxStalenessIntervalInSeconds),
	MaxStalenessPrefix = tostring(properties.maxStalenessPrefix),
	MultipleWriteLocations = tobool(properties.enableMultipleWriteLocations),
	Cors = tostring(properties.cors),
	BackupIntervalInMinutes = toint(properties.backupIntervalInMinutes), 
	BackupRetentionIntervalInHours = toint(properties.backupRetentionIntervalInHours),
	BackupStorageRedundancy = tostring(properties.backupStorageRedundancy),
	TargetBackupMode = tostring(properties.targetBackupMode),
	TargetContinuousTier = tostring(properties.targetContinuousTier),
	VnetResourceGroupName = tostring(properties.vnetResourceGroupName),
	VirtualNetworkName = tostring(properties.virtualNetworkName),
	VnetDatabaseAccountEntries = tostring(properties.vnetDatabaseAccountEntries),
	AcledSubnets = tostring(properties.acledSubnets),
	VnetLocation = tostring(properties.vnetLocation),
	VnetArmUrl = tostring(properties.vnetArmUrl),
	SqlQueryTextTraceType = tobool(properties.sqlQueryTextTraceType),
	EnableDataPlaneRequestsTrace = tobool(properties.enableDataPlaneRequestsTrace),
	EnableControlPlaneRequestsTrace = tobool(properties.enableControlPlaneRequestsTrace),
	EnableMongoRequestsTrace = tobool(properties.enableMongoRequestsTrace),
	EnableCassandraRequestsTrace = tobool(properties.enableCassandraRequestsTrace),
	EnableGremlinRequestsTrace = tobool(properties.enableGremlinRequestsTrace),
	DurationMs = todouble(properties.duration),
	RoleDefinitionId = tostring(properties.roleDefinitionId),
	RoleDefinitionName = tostring(properties.roleDefinitionName),
	RoleDefinitionType = tostring(properties.roleDefinitionType),
	RoleDefinitionAssignableScopes = tostring(properties.roleDefinitionAssignableScopes),
	RoleDefinitionPermissions = tostring(properties.roleDefinitionPermissions),
	RoleAssignmentId = tostring(properties.roleAssignmentId),
	AssociatedRoleDefinitionId = tostring(properties.associatedRoleDefinitionId),
	RoleAssignmentPrincipalId = tostring(properties.roleAssignmentPrincipalId),
	RoleAssignmentPrincipalType = tostring(properties.roleAssignmentPrincipalType),
	RoleAssignmentScope = tostring(properties.roleAssignmentScope),
	ApiKind = tostring(properties.apiKind),
	ApiKindResourceType = tostring(properties.apiKindResourceType),
	OperationType = tostring(properties.operationType),
	ResourceUri = tostring(properties.resourceUri),
	ResourceDetails = tostring(properties.resourceDetails),
	IsServiceManagedFailover = tobool(properties.isServiceManagedFailover)

 