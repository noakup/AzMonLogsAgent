let Actions=datatable(DeviceAction:string,DvcAction:string)
[ "reset client","Reset Source"
, "reset server","Reset Destination"
, "reset both", "Reset"
, "allow","Allow"
, "deny","Deny"
, "drop", "Drop"
, "drop ICMP", "Drop ICMP"];
let NWParser=(disabled:bool=false){
CommonSecurityLog | where not(disabled)
| where DeviceVendor=="Palo Alto Networks" and (Activity=="TRAFFIC")
| parse AdditionalExtensions with "PanOSPacketsReceived=" DstPackets:long ",PanOSPacketsSent=" SrcPackets:long ",start="EventStartTime ",reason="*
| project-rename 
    EventProductVersion=DeviceVersion // Not Documented
  , Dvc=DeviceName   
  , NetworkApplicationProtocol=ApplicationProtocol
  , SrcZone=DeviceCustomString4 
  , DstZone=DeviceCustomString5
  , NetworkRuleName=DeviceCustomString1
  , SrcUsername=SourceUserName 
  , DstUsername=DestinationUserName 
  , EventOriginalSeverity=LogSeverity // not documented
  , SrcNatIpAddr=SourceTranslatedAddress
  , DstNatIpAddr=DestinationTranslatedAddress
  , PaloAltoFlags=FlexString1 // Flags
| extend
EventVendor="Palo Alto"
  ,EventProduct="PanOS" // Not Documented
  , SrcBytes=tolong(SentBytes)
  , DstBytes=tolong(ReceivedBytes) 
  , NetworkPackets=tolong(DeviceCustomNumber2) 
  , NetworkProtocol=toupper(Protocol)
  , NetworkBytes=tolong(FlexNumber1)
  , SrcUsernameType=case(isempty(SrcUsername), "", SrcUsername contains "@", "UPN", "Simple")
  , DstUsernameType=case(isempty(DstUsername), "", DstUsername contains "@", "UPN", "Simple")
  , EventType="NetworkSession"
  , EventCount=toint(1)
  , EventResult=case(DeviceAction=="allow","Success","Failure")
  , NetworkSessionId=tostring(DeviceCustomNumber1)
  , NetworkDuration=toint(1000*DeviceCustomNumber3)
  , EventSchemaVersion="0.2.1"
  , EventSchema="NetworkSession"
  , EventSeverity = "Informational"
  , EventStartTime=coalesce(todatetime(EventStartTime), TimeGenerated)
| extend hostelements=split(Dvc,'.')
| extend DvcHostname=tostring(hostelements[0])
       , DvcDomain=strcat_array( array_slice(hostelements,1,-1), '.')
| extend DvcFQDN = iff(Dvc contains ".",Dvc,"" )
      , DvcDomainType=iff(Dvc contains ".","FQDN","" )
| project-away hostelements
| lookup Actions on DeviceAction
| project-rename
  DstMacAddr=DestinationMACAddress
  , SrcMacAddr=SourceMACAddress
  , DstIpAddr=DestinationIP
  , DstPortNumber=DestinationPort
  , DstNatPortNumber=DestinationTranslatedPort
  , SrcPortNumber=SourcePort
  , SrcIpAddr=SourceIP
  , SrcNatPortNumber=SourceTranslatedPort
  , DvcOutboundInterface=DeviceOutboundInterface
  , DvcInboundInterface=DeviceInboundInterface
  , EventMessage=Message
  , DvcOriginalAction=DeviceAction
// -- Aliases
| extend
IpAddr = SrcIpAddr,
Rule=NetworkRuleName,
Dst=DstIpAddr,
// Host=DstHostname, 
User=DstUsername,
Duration=NetworkDuration,
SessionId=NetworkSessionId,
EventEndTime =EventStartTime,
Src=SrcIpAddr
};
NWParser(disabled)