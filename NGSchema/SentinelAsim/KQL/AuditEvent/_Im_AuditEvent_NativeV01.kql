let parser=
(
  starttime: datetime=datetime(null), 
  endtime: datetime=datetime(null),
  srcipaddr_has_any_prefix: dynamic=dynamic([]), 
  eventtype_in: dynamic=dynamic([]),
  eventresult: string='*',
  actorusername_has_any: dynamic=dynamic([]),
  operation_has_any: dynamic=dynamic([]),
  object_has_any: dynamic=dynamic([]),
  newvalue_has_any: dynamic=dynamic([]),
  disabled: bool = false
)
{
  ASimAuditEventLogs  | where not(disabled)
  | project-rename
        EventUid = _ItemId
  | where (isnull(starttime) or TimeGenerated >= starttime) 
                  and (isnull(endtime) or TimeGenerated <= endtime)
                  and ((array_length(srcipaddr_has_any_prefix) == 0) or SrcIpAddr has_any (srcipaddr_has_any_prefix))
                  and (array_length(actorusername_has_any) == 0  or ActorUsername has_any (actorusername_has_any))
                  and (array_length(newvalue_has_any) == 0 or NewValue has_any (newvalue_has_any))
                  and (array_length(eventtype_in) == 0 or EventType has_any (eventtype_in))
                  and (array_length(operation_has_any) == 0 or Operation has_any (operation_has_any))
                  and (eventresult == '*' or EventResult == eventresult)
                  and (array_length(object_has_any) == 0 or Object has_any (object_has_any))
  | extend EventSchema = "AuditEvent"
  | extend
        Value	= NewValue,
        User =  ActorUsername,
        Application =  TargetAppName,
        Dst = coalesce (TargetDvcId, TargetHostname, TargetIpAddr, TargetAppId, TargetAppName),
        Dvc = coalesce (DvcFQDN, DvcHostname, DvcIpAddr, DvcId, _ResourceId, strcat (EventVendor,'/', EventProduct)),
        Rule=RuleName,
        IpAddr=SrcIpAddr,
        EventStartTime = TimeGenerated,
        EventEndTime = TimeGenerated,
        Src = coalesce (SrcFQDN, SrcHostname, SrcIpAddr, SrcDvcId)
    | project-away 
        _ResourceId, _SubscriptionId
  };
  parser(
    starttime=starttime, 
    endtime=endtime, 
    srcipaddr_has_any_prefix=srcipaddr_has_any_prefix, 
    eventtype_in=eventtype_in, 
    eventresult=eventresult, 
    actorusername_has_any=actorusername_has_any, 
    operation_has_any=operation_has_any, 
    object_has_any=object_has_any, 
    newvalue_has_any=newvalue_has_any, 
    disabled=disabled
  ) 