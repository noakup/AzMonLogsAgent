let parser=(
  starttime: datetime=datetime(null),
  endtime: datetime=datetime(null),
  eventtype_in: dynamic=dynamic([]),
  srcipaddr_has_any_prefix: dynamic=dynamic([]),
  actorusername_has_any: dynamic=dynamic([]),
  targetfilepath_has_any: dynamic=dynamic([]),
  srcfilepath_has_any: dynamic=dynamic([]),
  hashes_has_any: dynamic=dynamic([]),
  dvchostname_has_any: dynamic=dynamic([]),
  disabled: bool=false
  ) {
  ASimFileEventLogs
  | where not(disabled)
  | where (isnull(starttime) or TimeGenerated >= starttime)
      and (isnull(endtime) or TimeGenerated <= endtime)
  | where ((array_length(eventtype_in) == 0 or EventType in~ (eventtype_in))) and
      ((array_length(srcipaddr_has_any_prefix) == 0) or (has_any_ipv4_prefix(SrcIpAddr, srcipaddr_has_any_prefix))) and 
      ((array_length(actorusername_has_any) == 0) or (ActorUsername has_any (actorusername_has_any))) and
      ((array_length(targetfilepath_has_any) == 0) or (TargetFilePath has_any (targetfilepath_has_any))) and 
      ((array_length(srcfilepath_has_any) == 0) or (SrcFilePath has_any (srcfilepath_has_any))) and
      ((array_length(hashes_has_any) == 0) or (TargetFileMD5 in (hashes_has_any)) or (TargetFileSHA1 in (hashes_has_any)) or (TargetFileSHA256 in (hashes_has_any)) or (TargetFileSHA512 in (hashes_has_any))) and 
      (array_length(dvchostname_has_any) == 0 or DvcHostname has_any (dvchostname_has_any))
  | project-rename
      EventUid = _ItemId
  | extend          
      EventSchema = "FileEvent",
      DvcScopeId = iff(isempty(DvcScopeId), _SubscriptionId, DvcScopeId)
  //  -- Aliases
  | extend
      EventEndTime = iff (isnull(EventEndTime), TimeGenerated, EventEndTime),
      EventStartTime = iff (isnull(EventEndTime), TimeGenerated, EventStartTime),
      Dvc = coalesce (DvcFQDN, DvcHostname, DvcIpAddr, DvcId, _ResourceId),
      Src = SrcIpAddr,
      IpAddr = SrcIpAddr,
      Rule = coalesce(RuleName, tostring(RuleNumber)),
      User = ActorUsername,
      FileName = TargetFileName,
      FilePath = TargetFilePath,
      Process = ActingProcessName,
      Url = TargetUrl,
      Application = TargetAppName
  | project-away
      TenantId,
      SourceSystem,
      _SubscriptionId,
      _ResourceId
};
parser (
    starttime=starttime, 
    endtime=endtime, 
    eventtype_in=eventtype_in,
    srcipaddr_has_any_prefix=srcipaddr_has_any_prefix,
    actorusername_has_any=actorusername_has_any,
    targetfilepath_has_any=targetfilepath_has_any,
    srcfilepath_has_any=srcfilepath_has_any,
    hashes_has_any=hashes_has_any,
    dvchostname_has_any=dvchostname_has_any,
    disabled=disabled
  )
