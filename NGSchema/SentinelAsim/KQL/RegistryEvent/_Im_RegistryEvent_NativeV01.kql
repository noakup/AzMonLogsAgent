let parser = (
  starttime: datetime=datetime(null), 
  endtime: datetime=datetime(null),
  eventtype_in: dynamic=dynamic([]),
  actorusername_has_any: dynamic=dynamic([]),
  registrykey_has_any: dynamic =dynamic([]),
  registryvalue_has_any: dynamic =dynamic([]),
  registrydata_has_any: dynamic =dynamic([]),
  dvchostname_has_any: dynamic=dynamic([]),
  disabled: bool=false
  ) {
  ASimRegistryEventLogs
  | where not(disabled)
  | where (isnull(starttime) or TimeGenerated >= starttime) 
      and (isnull(endtime) or TimeGenerated <= endtime)
  | where (array_length(eventtype_in) == 0 or EventType in~ (eventtype_in)) and
      (array_length(actorusername_has_any) == 0 or (ActorUsername has_any (actorusername_has_any))) and
      ((array_length(registrykey_has_any)) == 0 or (RegistryKey has_any (registrykey_has_any))) and 
      ((array_length(registryvalue_has_any)) == 0 or (RegistryValue has_any (registryvalue_has_any))) and 
      (array_length(registrydata_has_any) == 0 or RegistryValueData has_any (registrydata_has_any)) and
      (array_length(dvchostname_has_any) == 0 or DvcHostname has_any (dvchostname_has_any))
  | project-rename
      EventUid = _ItemId
  | extend          
      EventSchema = "RegistryEvent",
      DvcScopeId = iff(isempty(DvcScopeId), _SubscriptionId, DvcScopeId)
  //  -- Aliases
  | extend
      EventEndTime = iff (isnull(EventEndTime), TimeGenerated, EventEndTime),
      EventStartTime = iff (isnull(EventEndTime), TimeGenerated, EventStartTime),
      Dvc = coalesce (DvcFQDN, DvcHostname, DvcIpAddr, DvcId, _ResourceId),
      User =  ActorUsername,
      Rule = coalesce(RuleName, tostring(RuleNumber)),
      Process =  ActingProcessName
  | project-away
      TenantId,
      SourceSystem,
      _SubscriptionId,
      _ResourceId
};
parser (
    starttime                = starttime,
    endtime                  = endtime,
    eventtype_in             = eventtype_in,
    actorusername_has_any    = actorusername_has_any,
    registrykey_has_any = registrykey_has_any,
    registryvalue_has_any = registryvalue_has_any,
    registrydata_has_any = registrydata_has_any,
    dvchostname_has_any= dvchostname_has_any,
    disabled                 = disabled
)