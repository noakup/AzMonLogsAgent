let parser = (disabled:bool = false) {
    // this is the parser for sysmon from Event table
    let parser_Event = (disabled:bool=false) {
        Event 
        | where not(disabled)
        | where Source == "Microsoft-Windows-Sysmon" and EventID == 5
        | parse-kv EventData as (
            ProcessId:string,
            ProcessGuid:string,
            Image:string,
            User:string
          ) 
          with (regex=@'<Data Name="(\w+)">{?([^<]*?)}?</Data>')
        | project-rename
            ActorUsername = User,
            DvcHostname = Computer,
            TargetProcessName = Image,
            TargetProcessGuid = ProcessGuid,
            TargetProcessId = ProcessId
        | extend 
            EventProduct = "Sysmon"
        | project-away EventData, ParameterXml, RenderedDescription, MG, ManagementGroupName, Message, AzureDeploymentID, SourceSystem, EventCategory, EventLevelName, EventLevel, EventLog, Role, TenantId, UserName
    };
    let parser_WindowsEvent=(disabled:bool=false){
        WindowsEvent
        | where not(disabled)
        | where Provider == "Microsoft-Windows-Sysmon" and EventID == 5
        | extend
            EventProduct = "Security Events",
            ActorUsername = tostring(EventData.User),
            TargetProcessName = tostring(EventData.Image),
            TargetProcessId = tostring(EventData.ProcessId),
            TargetProcessGuid = tostring(EventData.ProcessGuid)
        | project-rename
            DvcHostname = Computer,
            EventOriginalUid = EventOriginId
        | project-away Channel, Data, EventData, EventLevelName, EventLevel, ManagementGroupName, Provider, RawEventData, SourceSystem, Task, TenantId
    };
    union isfuzzy=true parser_Event(disabled=disabled) // , parser_WindowsEvent(disabled=disabled)
    | extend  
        EventType = "ProcessTerminated",
        EventStartTime = todatetime(TimeGenerated),
        EventEndTime = todatetime(TimeGenerated),
        EventCount = int(1),
        EventVendor = "Microsoft",
        EventSchemaVersion = "0.1.0",
        EventSchema = 'ProcessEvent',
        EventOriginalType=tostring(EventID),
        EventResult = 'Success',
        DvcOs = "Windows",
        ActorUsernameType = iff(isnotempty(ActorUsername),'Windows', ''),
        // -- Aliases 
        User = ActorUsername,
        Process = TargetProcessName,
        Dvc = DvcHostname
    | project-away EventID
};
parser (disabled = disabled) 
