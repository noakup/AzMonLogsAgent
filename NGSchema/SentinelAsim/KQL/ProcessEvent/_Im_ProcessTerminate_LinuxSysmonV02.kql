let ParsedProcessEvent=(){
Syslog
| where SyslogMessage has_all ('<Provider Name="Linux-Sysmon"', '<EventID>5</EventID>')
// --------------------------------------------------------------------------------------
| where
(isnull(starttime)   or TimeGenerated >= starttime )
and (isnull(endtime) or TimeGenerated <= endtime )
and not(disabled)
and (array_length(dvcipaddr_has_any_prefix)==0)
and (array_length(commandline_has_all)==0) 
and (array_length(commandline_has_any)==0) 
and (array_length(actingprocess_has_any)==0) 
and (array_length(parentprocess_has_any)==0) 
and (array_length(commandline_has_any_ip_prefix)==0) 
and (eventtype=='*' or eventtype=='ProcessTerminated')
and (array_length(targetprocess_has_any)==0 or SyslogMessage has_any (targetprocess_has_any)) 
and (actorusername=='*' or SyslogMessage has actorusername)  
and (array_length(dvcname_has_any)==0 or Computer has_any (dvcname_has_any))   
// --------------------------------------------------------------------------------------
| parse SyslogMessage with *'<Data Name="User">'ActorUsername '</Data>' *
// --------------------------------------------------------------------------------------
| where
  (actorusername=='*' or ActorUsername has actorusername)  
// --------------------------------------------------------------------------------------
| parse SyslogMessage with * '<Data Name="RuleName">'RuleName'</Data>'
                            '<Data Name="UtcTime">'UtcTime'</Data>'
                            '<Data Name="ProcessGuid">{'ProcessGuid'}</Data>'
                            '<Data Name="ProcessId">'ProcessId:string'</Data>'
                            '<Data Name="Image">'Image'</Data>'*
// --------------------------------------------------------------------------------------
| where
   (array_length(targetprocess_has_any)==0 or Image has_any (targetprocess_has_any)) 
// --------------------------------------------------------------------------------------
| project-away SyslogMessage
| extend 
    EventType = "ProcessTerminated",
    EventStartTime = todatetime(TimeGenerated),
    EventEndTime = todatetime(TimeGenerated),
    EventCount = int(1),
    EventVendor = "Microsoft",
    EventSchemaVersion = "0.1.0",
    EventSchema = 'ProcessEvent',
    EventOriginalType='5',
    EventProduct = "Sysmon",
    EventResult = 'Success',
    DvcOs = "Linux"
| project-rename
    DvcHostname = Computer,
    TargetProcessName = Image,
    TargetProcessId = ProcessId
| extend
    ActorUsernameType = iff(isnotempty(ActorUsername),'Windows', ''),
    TargetProcessGuid = ProcessGuid,
    //***** Aliases ******
    User = ActorUsername,
    Process = TargetProcessName,
    Dvc = DvcHostname
}; ParsedProcessEvent
