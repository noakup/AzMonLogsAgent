let parser=
(
  starttime: datetime=datetime(null), 
  endtime: datetime=datetime(null), 
  username_has_any: dynamic = dynamic([]),
  targetappname_has_any: dynamic = dynamic([]),
  srcipaddr_has_any_prefix: dynamic = dynamic([]),
  srchostname_has_any: dynamic = dynamic([]),
  eventtype_in: dynamic = dynamic([]),
  eventresultdetails_in: dynamic = dynamic([]),
  eventresult: string = '*',
  disabled: bool=false
)
{
  ASimAuthenticationEventLogs  | where not(disabled)
  //  -- Pre-parsing filtering:
  | where
      (isnull(starttime) or TimeGenerated >= starttime) 
      and (isnull(endtime) or TimeGenerated <= endtime)
      and ((array_length(username_has_any) == 0) or TargetUsername has_any (username_has_any))
      and ((array_length(targetappname_has_any) == 0) or TargetAppName has_any (targetappname_has_any))  
      and ((array_length(srcipaddr_has_any_prefix) == 0) or (has_any_ipv4_prefix(SrcIpAddr, srcipaddr_has_any_prefix)))
      and ((array_length(srchostname_has_any) == 0) or SrcHostname has_any (srchostname_has_any))
      and ((array_length(eventtype_in) == 0) or EventType in~ (eventtype_in))
      and (array_length(eventresultdetails_in) == 0 or EventResultDetails has_any (eventresultdetails_in))
      and (eventresult == "*" or (EventResult == eventresult))
  | extend
        User =  TargetUsername,
        Src = coalesce (SrcDvcId, SrcHostname, SrcIpAddr),
        IpAddr=SrcIpAddr,
        LogonTarget= coalesce (TargetAppName, TargetUrl, TargetHostname),
        Dvc=EventVendor,
        Application=TargetAppName,
        Dst = coalesce (TargetDvcId,TargetHostname, TargetIpAddr, TargetAppId,TargetAppName), 
        Rule = coalesce(RuleName, tostring(RuleNumber)),
        EventStartTime = TimeGenerated,
        EventEndTime = TimeGenerated,
        EventSchema = "Authentication"
  | project-rename
        EventUid = _ItemId
  | project-away TenantId, SourceSystem, _ResourceId, _SubscriptionId
};
parser
  (
  starttime=starttime,
  endtime=endtime,
  username_has_any=username_has_any,
  targetappname_has_any=targetappname_has_any,
  srcipaddr_has_any_prefix=srcipaddr_has_any_prefix,
  srchostname_has_any=srchostname_has_any,
  eventtype_in=eventtype_in,
  eventresultdetails_in=eventresultdetails_in,
  eventresult=eventresult,
  disabled=disabled
)
