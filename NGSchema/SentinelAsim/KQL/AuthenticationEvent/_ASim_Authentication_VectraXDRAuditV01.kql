let parser = (disabled:bool = false)
{
  Audits_Data_CL
  | where not(disabled) and event_action_s in ("login","logout")
  | extend
        EventCount = int(1),
        EventEndTime = event_timestamp_t,
        EventProduct = 'Vectra XDR',
        EventResult = case(result_status_s=="success", "Success", result_status_s=="failure", "Failure","NA"),
        EventSchema = "Authentication",
        EventSchemaVersion = "0.1.3",
        EventStartTime = event_timestamp_t,
        EventType = case(event_action_s=="login", "Logon", event_action_s=="logout", "Logoff",""),
        EventVendor = 'Vectra',
        ActorUserId = tostring(toint(user_id_d)),
        ActorUserIdType = "VectraUserId",
        ActorUsernameType = "UPN",
        EventUid = tostring(toint(id_d))
  | project-rename
        DvcIpAddr = source_ip_s,
        ActorOriginalUserType = user_type_s,
        ActorUsername = username_s,
        EventMessage = Message,
        EventProductVersion = version_s
  | extend
        User = ActorUsername,
        Dvc = DvcIpAddr
  | project-away
        *_d, *_s, event_timestamp_t, api_client_id_g, TenantId, _ResourceId, RawData, SourceSystem, Computer, MG, ManagementGroupName
};
parser (disabled=disabled)