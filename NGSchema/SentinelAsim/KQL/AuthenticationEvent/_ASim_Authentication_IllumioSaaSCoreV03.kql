let EventTypeLookup = datatable(
    event_type: string, // what Illumio sends
    EventType: string, // an enumerated list [ Logon, Logoff, Elevate ] event type
    EventResultDetails: string,
    EventResult: string
)
[
    'user.authenticate', 'Logon', 'Other', 'Success',
    'user.login', 'Logon', 'Other', 'Success',
    'user.logout', 'Logoff', 'Other', 'Success',
    'user.sign_in', 'Logon', 'Other', 'Success',
    'user.sign_out', 'Logoff', 'Other', 'Success',
    'user.use_expired_password', 'Logon', 'Password expired', 'Success'
];
let user_events = dynamic(['user.sigin', 'user.login', 'user.sign_out', 'user.logout', 'user.authenticate', 'user.use_expired_password']);
let parser=(disabled: bool=false) {
  Illumio_Auditable_Events_CL
  | where not(disabled) and event_type in (user_events) // limited to user signin, login, logoff, signoff events only
  | extend 
        EventProduct='Core'
        ,
        EventVendor='Illumio'
        ,
        EventSchema = 'Authentication'
        ,
        EventCount=int(1)
        ,
        EventSchemaVersion='0.1.3'
        ,    
        EventOriginalUid = href
  | lookup EventTypeLookup on event_type //fetch EventType, EventResultDetails, EventResult
  | extend              
          EventStartTime=TimeGenerated
          ,
          EventEndTime=TimeGenerated
          ,                            
          TargetUsername = case(                  
              isnotnull(created_by.user), created_by.user.username,                  
              "Unknown"
          ),
          TargetUsernameType = "Simple",
          EventUid = _ItemId,
          SrcIpAddr = iff(action.src_ip == 'FILTERED', "", action.src_ip)
      // ** Aliases
      | extend 
          Dvc=EventVendor
          ,
          IpAddr=SrcIpAddr
          ,
          User = TargetUsername
      | project-away               
          TenantId,
          href,
          pce_fqdn,
          created_by,
          event_type,
          status,
          severity,
          action,
          resource_changes,
          notifications,
          version              
  };
  parser(disabled = disabled)