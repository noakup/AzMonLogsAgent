let RCodeTable=datatable(DnsResponseCode:int,DnsResponseCodeName:string)[
    // See https://docs.microsoft.com/windows/win32/debug/system-error-codes--9000-11999-
    0, 'NOERROR'
  , 9001, "FORMERR"
  , 9002,"SERVFAIL"
  , 9003,'NXDOMAIN'
  , 9004,'NOTIMP'
  , 9005,'REFUSED'
  , 9006,'YXDOMAIN'
  , 9007,'YXRRSET'
  , 9008,'NXRRSET'
  , 9009,'NOTAUTH'
  , 9010,'NOTZONE'
  , 9011,'DSOTYPENI'
  , 9016,'BADVERS'
  , 9016,'BADSIG'
  , 9017,'BADKEY'
  , 9018,'BADTIME'
  , 9019,'BADMODE'
  , 9020,'BADNAME'
  , 9021,'BADALG'
  , 9022,'BADTRUNC'
  , 9023,'BADCOOKIE'
  , 1460, 'TIMEOUT'
  ];
let ParsedDnsEvent_Event =(disabled:bool=false) {
    Event | where not(disabled)
    | project EventID, EventData, Computer, TimeGenerated, _ResourceId, _SubscriptionId, Source // , _ItemId 
    | where Source == "Microsoft-Windows-Sysmon" and EventID==22
    | project-away Source, EventID
    | parse EventData with 
       *'<Data Name="RuleName">' RuleName:string '</Data>' 
        '<Data Name="UtcTime">' EventEndTime:datetime '</Data>'
        '<Data Name="ProcessGuid">{' SrcProcessGuid:string '}</Data>'
        '<Data Name="ProcessId">' SrcProcessId:string '</Data>'
        '<Data Name="QueryName">' DnsQuery:string '</Data>'
        '<Data Name="QueryStatus">' DnsResponseCode:int  '</Data>'
        '<Data Name="QueryResults">' DnsResponseName:string '</Data>'
        '<Data Name="Image">' Process:string '</Data>'
        '<Data Name="Image">' SrcProcessName:string '</Data>'
    | parse EventData with * '<Data Name="User">'SrcUsername:string '</Data>' *
    | project-away EventData
};
let ParsedDnsEvent_WindowsEvent =(disabled:bool=false) {
    WindowsEvent | where not(disabled)
    | project EventID, EventData, Computer, TimeGenerated, _ResourceId, _SubscriptionId,  Provider // , _ItemId 
    | where Provider == "Microsoft-Windows-Sysmon" and EventID == 22
    | project-away Provider, EventID      
    | extend 
        RuleName = tostring(EventData.RuleName),
        EventEndTime = todatetime(EventData.UtcTime),
        SrcProcessGuid = extract ('^{(.*)}$', 1, tostring(EventData.ProcessGuid), typeof(string)),
        SrcProcessId = tostring(EventData.ProcessId),  
        DnsQuery = tostring(EventData.QueryName),
        DnsResponseCode = toint(EventData.QueryStatus),
        DnsResponseName = tostring(EventData.QueryResults),
        SrcProcessName = tostring(EventData.Image),
        SrcUsername = tostring(EventData.User)
    | project-away EventData
};
union isfuzzy=true ParsedDnsEvent_Event(disabled), ParsedDnsEvent_WindowsEvent(disabled)
  | lookup RCodeTable on DnsResponseCode
  | project-rename 
      DvcHostname = Computer,
      // EventUid = _ItemId, 
      DvcScopeId = _SubscriptionId
  | extend
      EventOriginalType = '22',
      EventCount=int(1),
      EventProduct = 'Sysmon',
      EventVendor = 'Microsoft',
      EventSchema = 'Dns',
      EventSchemaVersion="0.1.3",
      EventType = 'lookup',
      EventResult = iff (DnsResponseCode == 0,'Success','Failure'),
      EventStartTime = EventEndTime,
      EventSubType= 'response',
      EventSeverity= iif (DnsResponseCode == 0, 'Informational', 'Low'),
      SrcUsernameType = 'Windows'
  // -- Aliases
  | extend 
      EventResultDetails = DnsResponseCodeName,
      Domain = DnsQuery,
      Dvc = DvcHostname,
      SrcHostname = DvcHostname,
      Hostname=DvcHostname,
      Src = DvcHostname,
      DnsResponseCode = toint(iff (DnsResponseCode > 9000 and DnsResponseCode < 9100, DnsResponseCode-9000, DnsResponseCode)),
      User = SrcUsername,
      Process = SrcProcessName
