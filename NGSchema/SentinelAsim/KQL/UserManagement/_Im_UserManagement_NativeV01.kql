let parser = (
  starttime:datetime                  = datetime(null)
  , endtime:datetime                  = datetime(null)
  , srcipaddr_has_any_prefix:dynamic  = dynamic([])
  , targetusername_has_any:dynamic    = dynamic([])
  , actorusername_has_any:dynamic     = dynamic([])
  , eventtype_in:dynamic              = dynamic([])
  , disabled:bool                     = false
)
{
  ASimUserManagementActivityLogs
  | where not(disabled)
  | where (isnull(starttime) or TimeGenerated >= starttime)
      and (isnull(endtime) or TimeGenerated <= endtime)
      and (array_length(srcipaddr_has_any_prefix) == 0 or has_any_ipv4_prefix(SrcIpAddr,srcipaddr_has_any_prefix))
      and (array_length(actorusername_has_any) == 0 or ActorUsername has_any (actorusername_has_any))
      and (array_length(targetusername_has_any) == 0 or TargetUsername has_any (targetusername_has_any))
      and (array_length(eventtype_in) == 0 or EventType in~ (eventtype_in))
  | project-rename
      EventUid = _ItemId
  | extend          
      EventSchema = "UserManagement",
      DvcScopeId = iff(isempty(DvcScopeId), _SubscriptionId, DvcScopeId)
  //  -- Aliases
  | extend
      EventEndTime = iff (isnull(EventEndTime), TimeGenerated, EventEndTime),
      EventStartTime = iff (isnull(EventEndTime), TimeGenerated, EventStartTime),
      Dvc = coalesce (DvcFQDN, DvcHostname, DvcIpAddr, DvcId, _ResourceId),
      Rule = coalesce(RuleName, tostring(RuleNumber)),
      User = ActorUsername,
      Hostname = DvcHostname,
      IpAddr = SrcIpAddr,
      Src = coalesce (SrcHostname,SrcIpAddr, SrcDvcId),
      UpdatedPropertyName = EventSubType
  | project-away
      TenantId,
      SourceSystem,
      _SubscriptionId,
      _ResourceId
};
parser (
  starttime                  = starttime
  , endtime                  = endtime
  , srcipaddr_has_any_prefix = srcipaddr_has_any_prefix
  , targetusername_has_any   = targetusername_has_any
  , actorusername_has_any    = actorusername_has_any
  , eventtype_in             = eventtype_in
  , disabled                 = disabled
)
