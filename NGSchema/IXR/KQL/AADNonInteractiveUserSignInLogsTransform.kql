source
| project
    TenantId = tenantId,
    SourceSystem = "Azure AD",
    TimeGenerated = todatetime(["time"]),
    OperationName = operationName,
    OperationVersion = operationVersion,
    Category = category,
    ResultType = resultType,
    ResultSignature = resultSignature,
    ResultDescription = resultDescription,
    DurationMs = tolong(durationMs),
    CorrelationId = correlationId,
    ResourceGroup = tostring(split(resourceId, '/')[4]),
    Identity = identity,
    Level = Level,
    Location = location,
    AADTenantId = tostring(split(resourceId, '/')[2]),
    Agent = tostring(properties.agent),
    AlternateSignInName = tostring(properties.alternateSignInName),
    AppDisplayName = tostring(properties.appDisplayName),
    AppId = tostring(properties.appId),
    AppliedEventListeners = todynamic(properties.appliedEventListeners),
    AppOwnerTenantId = tostring(properties.appOwnerTenantId),
    AuthenticationContextClassReferences = tostring(properties.authenticationContextClassReferences),
    AuthenticationDetails = tostring(properties.authenticationDetails),
    AuthenticationMethodsUsed = tostring(properties.authenticationMethodsUsed),
    AuthenticationProcessingDetails = tostring(properties.authenticationProcessingDetails),
    AuthenticationProtocol = tostring(properties.authenticationProtocol),
    AuthenticationRequirement = tostring(properties.authenticationRequirement),
    AuthenticationRequirementPolicies = tostring(properties.authenticationRequirementPolicies),
    AutonomousSystemNumber = tostring(properties.autonomousSystemNumber),
    ClientAppUsed = tostring(properties.clientAppUsed),
    ClientCredentialType = tostring(properties.clientCredentialType),
    ConditionalAccessPolicies = tostring(properties.appliedConditionalAccessPolicies),
    ConditionalAccessPoliciesV2 = todynamic(""),
    ConditionalAccessStatus = tostring(properties.conditionalAccessStatus),
    CreatedDateTime = todatetime(properties.createdDateTime),
    CrossTenantAccessType = tostring(properties.crossTenantAccessType),
    DeviceDetail = tostring(properties.deviceDetail),
    FederatedCredentialId = tostring(properties.federatedCredentialId),
    GlobalSecureAccessIpAddress = tostring(properties.globalSecureAccessIpAddress),
    HomeTenantId = tostring(properties.homeTenantId),
    HomeTenantName = tostring(properties.homeTenantName),
    Id = tostring(properties.id),
    IncomingTokenType = tostring(properties.incomingTokenType),
    IPAddress = tostring(properties.ipAddress),
    IsInteractive = tobool(properties.isInteractive),
    IsRisky = tobool(properties.isRisky),
    IsTenantRestricted = tobool(properties.isTenantRestricted),
    IsThroughGlobalSecureAccess = tobool(properties.isThroughGlobalSecureAccess),
    LocationDetails = tostring(properties.location),
    MfaDetail = tostring(properties.mfaDetail),
    NetworkLocationDetails = tostring(properties.networkLocationDetails),
    OriginalRequestId = tostring(properties.originalRequestId),
    OriginalTransferMethod = tostring(properties.originalTransferMethod),
    ProcessingTimeInMs = tostring(properties.processingTimeInMilliseconds),
    ResourceDisplayName = tostring(properties.resourceDisplayName),
    ResourceIdentity = tostring(properties.resourceId),
    ResourceOwnerTenantId = tostring(properties.resourceOwnerTenantId),
    ResourceServicePrincipalId = tostring(properties.resourceServicePrincipalId),
    ResourceTenantId = tostring(properties.resourceTenantId),
    RiskDetail = tostring(properties.riskDetail),
    RiskEventTypes = tostring(properties.riskEventTypes),
    RiskEventTypes_V2 = tostring(properties.riskEventTypes_V2),
    RiskLevelAggregated = tostring(properties.riskLevelAggregated),
    RiskLevelDuringSignIn = tostring(properties.riskLevelDuringSignIn),
    RiskState = tostring(properties.riskState),
    ServicePrincipalId = tostring(properties.servicePrincipalId),
    SessionId = tostring(properties.sessionId),
    SessionLifetimePolicies = tostring(properties.sessionLifetimePolicies),
    SignInEventTypes = tostring(properties.signInEventTypes),
    SignInIdentifierType = tostring(properties.signInIdentifierType),
    TokenProtectionStatusDetails = tostring(properties.tokenProtectionStatusDetails),
    Status = tostring(properties.status),
    TokenIssuerName = tostring(properties.tokenIssuerName),
    TokenIssuerType = tostring(properties.tokenIssuerType),
    UniqueTokenIdentifier = tostring(properties.uniqueTokenIdentifier),
    UserAgent = tostring(properties.userAgent),
    UserDisplayName = tostring(properties.userDisplayName),
    UserId = tostring(properties.userId),
    UserPrincipalName = tostring(properties.userPrincipalName),
    UserType = tostring(properties.userType)