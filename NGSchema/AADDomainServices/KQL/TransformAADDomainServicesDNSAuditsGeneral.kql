source
| project
    TimeGenerated = todatetime(["time"]),
    operationName = operationName,
    operationVersion = operationVersion,
    resultDescription = resultDescription,
    Name = tostring(iff(isnull(properties.EventData.Name), properties.EventData.NAME, properties.EventData.Name)),
    Lookup = tostring(properties.EventData.Lookup),
    ReplicationScope = tostring(properties.EventData.ReplicationScope),
    ZoneFile = tostring(properties.EventData.ZoneFile),
    VirtualizationID = tostring(properties.EventData.VirtualizationID),
    Zone = tostring(properties.EventData.Zone),
    PropertyKey = tostring(properties.EventData.PropertyKey),
    NewValue = tostring(properties.EventData.NewValue),
    Ttl = toint(properties.EventData.TTL),
    BufferSize = toint(properties.EventData.BufferSize),
    RData = tostring(properties.EventData.RDATA),
    ZoneScope = tostring(properties.EventData.ZoneScope),
    ZoneName = tostring(properties.EventData.ZoneName),
    DenialOfExistence = tostring(properties.EventData.DenialOfExistence),
    DistributeTrustAnchor = tostring(properties.EventData.DistributeTrustAnchor),
    DnsKeyRecordSetTtl = toint(properties.EventData.DnsKeyRecordSetTtl),
    DSRecordGenerationAlgorithm = tostring(properties.EventData.DSRecordGenerationAlgorithm),
    DSRecordSetTtl = toint(properties.EventData.DSRecordSetTtl),
    EnableRfc5011KeyRollover = tostring(properties.EventData.EnableRfc5011KeyRollover),
    IsKeyMasterServer = tostring(properties.EventData.IsKeyMasterServer),
    KeyMasterServer = tostring(properties.EventData.KeyMasterServer),
    NSec3HashAlgorithm = toint(properties.EventData.NSec3HashAlgorithm),
    NSec3Iterations = toint(properties.EventData.NSec3Iterations),
    NSec3OptOut = tostring(properties.EventData.NSec3OptOut),
    NSec3RandomSaltLength = toint(properties.EventData.NSec3RandomSaltLength),
    NSec3UserSalt = tostring(properties.EventData.NSec3UserSalt),
    ParentHasSecureDelegation = tostring(properties.EventData.ParentHasSecureDelegation),
    PropagationTime = toint(properties.EventData.PropagationTime),
    SecureDelegationPollingPeriod = toint(properties.EventData.SecureDelegationPollingPeriod),
    SignatureInceptionOffset = toint(properties.EventData.SignatureInceptionOffset),
    EventGuid = tostring(properties.EventData.GUID),
    WithWithout = tostring(properties.EventData.WithWithout),
    QType = toint(properties.EventData.QTYPE),
    QName = tostring(properties.EventData.QNAME),
    Scope = tostring(properties.EventData.Scope),
    Forwarders = tostring(properties.EventData.Forwarders),
    Setting = tostring(properties.EventData.Setting),
    RecursionScope = tostring(properties.EventData.RecursionScope),
    KeyProtocol = tostring(properties.EventData.KeyProtocol),
    Base64Data = tostring(properties.EventData.Base64Data),
    CryptoAlgorithm = tostring(properties.EventData.CryptoAlgorithm),
    KeyTag = toint(properties.EventData.KeyTag),
    DigestType = tostring(properties.EventData.DigestType),
    Digest = tostring(properties.EventData.Digest),
    FilePath = tostring(properties.EventData.FilePath),
    EventString = tostring(properties.EventData.EventString),
    ListenAddresses = tostring(properties.EventData.ListenAddresses),
    MasterServer = tostring(properties.EventData.MasterServer),
    NodeName = tostring(properties.EventData.NodeName),
    SubTreeAging = tostring(properties.EventData.SubTreeAging),
    ScavengeServers = tostring(properties.EventData.ScavengeServers),
    SeizedOrTransfered = tostring(properties.EventData.SeizedOrTransfered),
    WithNewKeys = tostring(properties.EventData.WithNewKeys),
    KeyOrZone = tostring(properties.EventData.KeyOrZone),
    KskOrZsk = tostring(properties.EventData.KskOrZsk),
    KeyId = tostring(properties.EventData.KeyId),
    KeyType = tostring(properties.EventData.KeyType),
    CurrentState = tostring(properties.EventData.CurrentState),
    KeyStorageProvider = tostring(properties.EventData.KeyStorageProvider),
    StoreKeysInAD = tostring(properties.EventData.StoreKeysInAD),
    KeyLength = toint(properties.EventData.KeyLength),
    DnsKeySignatureValidityPeriod = toint(properties.EventData.DnsKeySignatureValidityPeriod),
    DSSignatureValidityPeriod = toint(properties.EventData.DSSignatureValidityPeriod),
    ZoneSignatureValidityPeriod = toint(properties.EventData.ZoneSignatureValidityPeriod),
    InitialRolloverOffset = toint(properties.EventData.InitialRolloverOffset),
    RolloverPeriod = toint(properties.EventData.RolloverPeriod),
    RolloverType = tostring(properties.EventData.RolloverType),
    NextRolloverAction = tostring(properties.EventData.NextRolloverAction),
    LastRolloverTime = todatetime(properties.EventData.LastRolloverTime),
    NextRolloverTime = todatetime(properties.EventData.NextRolloverTime),
    CurrentRolloverStatus = tostring(properties.EventData.CurrentRolloverStatus),
    ActiveKey = tostring(properties.EventData.ActiveKey),
    StandbyKey = tostring(properties.EventData.StandbyKey),
    NextKey = tostring(properties.EventData.NextKey),
    ChildZone = tostring(properties.EventData.ChildZone),
    NameServer = tostring(properties.EventData.NameServer),
    ClientSubnetRecord = tostring(properties.EventData.ClientSubnetRecord),
    ClientSubnetList = tostring(properties.EventData.ClientSubnetList),
    ServerName = tostring(properties.EventData.ServerName),
    ProcessingOrder = toint(properties.EventData.ProcessingOrder),
    Criteria = tostring(properties.EventData.Criteria),
    Action = tostring(properties.EventData.Action),
    Policy = tostring(properties.EventData.Policy),
    Condition = tostring(properties.EventData.Condition),
    IsEnabled = tostring(properties.EventData.IsEnabled),
    Scopes = tostring(properties.EventData.Scopes),
    OldPropertyValues = tostring(properties.EventData.OldPropertyValues),
    NewPropertyValues = tostring(properties.EventData.NewPropertyValues),
    ScopeWeight = toint(properties.EventData.ScopeWeight),
    ScopeWeightNew = toint(properties.EventData.ScopeWeightNew),
    ScopeWeightOld = toint(properties.EventData.ScopeWeightOld),
    NewScope = tostring(properties.EventData.NewScope),
    OldScope = tostring(properties.EventData.OldScope),
    ResponsePerSecond = toint(properties.EventData.ResponsePerSecond),
    ErrorsPerSecond = toint(properties.EventData.ErrorsPerSecond),
    LeakRate = toint(properties.EventData.LeakRate),
    TCRate = toint(properties.EventData.TCRate),
    WindowSize = toint(properties.EventData.WindowSize),
    TotalResponsesInWindow = toint(properties.EventData.TotalResponsesInWindow),
    IPv4PrefixLength = toint(properties.EventData.IPv4PrefixLength),
    IPv6PrefixLength = toint(properties.EventData.IPv6PrefixLength),
    Mode = tostring(properties.EventData.Mode),
    RRLExceptionlist = tostring(properties.EventData.RRLExceptionlist),
    FriendlyName = tostring(properties.EventData.FriendlyName),
    OldFriendlyName = tostring(properties.EventData.OldFriendlyName),
    NewFriendlyName = tostring(properties.EventData.NewFriendlyName),
    RecordId = tostring(properties.RecordId)