source
| extend properties = parse_json(tostring(properties))
| project 
    TimeGenerated = todatetime(["timeGenerated"]),
    CorrelationId = correlationId,
    AADObjectId = tostring(properties.aadObjectId),
    AADTenantId = tostring(properties.aadTenantId),
    AADEmail = tostring(properties.aadEmail),
    AADClientId = tostring(properties.aadClientId),
    QueryTimeRangeStart = todatetime(properties.queryTimeRangeStart),
    QueryTimeRangeEnd = todatetime(properties.queryTimeRangeEnd),
    QueryText = tostring(properties.queryText),
    RequestClientApp = tostring(properties.requestClientApp),
    RequestTarget = tostring(properties.requestTarget),
    RequestContext = todynamic(properties.requestContext),
    RequestContextFilters = todynamic(properties.requestContextFilters),
    ResponseCode = toint(properties.responseCode),
    ResponseRowCount = toint(properties.responseRowCount),
    ResponseDurationMs = todouble(properties.responseDurationMs),
    StatsCPUTimeMs = todouble(properties.statsCPUTimeMs),
    StatsDataProcessedKB = todouble(properties.statsDataProcessedKB),
    StatsDataProcessedStart = todatetime(properties.statsDataProcessedStart),
    StatsDataProcessedEnd = todatetime(properties.statsDataProcessedEnd),
    StatsWorkspaceCount = toint(properties.statsWorkspaceCount),
    StatsRegionCount = toint(properties.statsRegionCount),
    IsBillableQuery = tobool(properties.isBillable),
    ScannedGB = todouble(properties.scannedGB),
    WorkspaceRegion = tostring(properties.workspaceRegion),
    IsWorkspaceInFailover = tobool(properties.isWorkspaceInFailover),
    ConditionalDataAccess = tostring(properties.conditionalDataAccess)