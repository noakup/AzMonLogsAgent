source
| extend properties = parse_json(properties)
| extend identityObj = parse_json(identity)
| extend authorization = parse_json(identityObj.Authorization)
| extend claims = parse_json(identityObj.Claims)
| project 
    TimeGenerated = todatetime(["time"]),
    OperationName = operationName,
    EventType = tostring(properties.eventType),
    CorrelationId = CorrelationId,
    ResultType = resultType,
    DurationMs = durationMs,
    WorkflowJobId = iff(isnull(properties.workflowJobId), tostring(properties.workflowJobIds),  tostring(properties.workflowJobId)),
    OperationType = tostring(properties.operationType),
    TasksCount = toint(properties.tasksCount),
    SubmittedBy = tostring(properties.submittedBy),
    WorkflowType = tostring(properties.workflowType),
    WorkflowSubmissionKind = tostring(properties.WorkflowSubmissionKind),
    WorkflowStatus = tostring(properties.workflowStatus),
    StartTime = todatetime(properties.startTimestamp),
    EndTime = todatetime(properties.endTimestamp),
    SubmittedTime = todatetime(properties.submittedTimestamp),
    InstanceId = tostring(properties.instanceId),
    Identifier = tostring(properties.identifier),
    FriendlyName = tostring(properties.friendlyName),
    Error = tostring(properties.error),
    AdditionalInformation = tostring(properties.additionalInfo),
    Level = level,
    Category = category,
    ResultSignature = resultSignature,
    CallerIPAddress = callerIpAddress,
    Method = tostring(properties.method),
    Path = tostring(properties.path),
    UserAgent = tostring(properties.userAgent),
    Origin = tostring(properties.origin),
    OperationStatus = tostring(properties.operationStatus),
    CallerObjectId = tostring(properties.callerObjectId),
    UserRole = tostring(authorization.UserRole),
    RequiredRoles = tostring(authorization.RequiredRoles),
    Claims = tostring(claims),
    UserPrincipalName = tostring(claims.upn),
    Audience = tostring(claims.aud),
    Uri = uri