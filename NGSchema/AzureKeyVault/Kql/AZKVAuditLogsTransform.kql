source
| project 
	TimeGenerated = todatetime(['time']),     
	OperationName = tostring(operationName),
	ResultType = tostring(resultType),
	ResultDescription = tostring(resultDescription),
	CorrelationId = tostring(correlationId),
	CallerIpAddress = tostring(callerIpAddress),
	OperationVersion = tostring(operationVersion),
	Nsp = nsp,
	Identity = identity,
	Properties = properties,
	KeyProperties = todynamic(properties.keyProperties),
	SecretProperties = todynamic(properties.secretProperties),
	CertificateProperties = todynamic(properties.certificateProperties),
	CertificatePolicyProperties = todynamic(properties.certificatePolicyProperties),
	CertificateIssuerProperties = todynamic(properties.certificateIssuerProperties),
	CertificateRequestProperties = todynamic(properties.certificateRequestProperties),
	StorageAccountProperties = todynamic(properties.storageAccountProperties),
	StorageSasDefinitionProperties = todynamic(properties.storageSasDefinitionProperties),
	Id = tostring(properties.id),
	Algorithm = tostring(properties.algorithm),
	ClientInfo = tostring(properties.clientInfo),
	SubnetId = tostring(properties.subnetId),
	HttpStatusCode = toint(properties.httpStatusCode),
	RequestUri = tostring(properties.requestUri),
	IsAddressAuthorized = tobool(properties.isAddressAuthorized),
	AddressAuthorizationType = tostring(properties.addrAuthType),
	IsAccessPolicyMatch = tobool(properties.isAccessPolicyMatch),
	IsRbacAuthorized = tobool(properties.isRbacAuthorized),
	AppliedAssignmentId = tostring(properties.appliedAssignmentId),
	TrustedService = tostring(properties.trustedService),
	Tlsversion = tostring(properties.tlsVersion),
	VaultProperties = todynamic(properties.properties),
	Sku = todynamic(properties.properties.sku),
	NetworkAcls = todynamic(properties.properties.networkAcls),
	EnabledForDeployment = tobool(properties.properties.enabledForDeployment),
	EnabledForDiskEncryption = tobool(properties.properties.enabledForDiskEncryption),
	EnabledForTemplateDeployment = tobool(properties.properties.enabledForTemplateDeployment),
	EnableSoftDelete = tobool(properties.properties.enableSoftDelete),
	SoftDeleteRetentionInDays = toint(properties.properties.softDeleteRetentionInDays),
	EnableRbacAuthorization = tobool(properties.properties.enableRbacAuthorization),
	EnablePurgeProtection = tobool(properties.properties.enablePurgeProtection),
	HsmPoolResourceId = tostring(properties.properties.hsmPoolResourceId),
	ResultSignature = tostring(resultSignature),
	DurationMs = toint(durationMs)